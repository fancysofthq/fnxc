# An object is a entity with a lifespan, i.e.
# an initialize-able and finalize-able entity.
#
# This module is implicitly derived by all
# `primitive`s, `struct`s, `class`es and `enum`s.
# NOTE: It can not be derived explicitly.
#
# ```
# @assert({{ Int32 < Object }})
# ```
module Object
  derive Module

  # Yields `self`, then returns `self`.
  #
  # NOTE: Block arguments are `const` by default.
  #
  # ```
  # def main
  #   var x = 42.tap -> @p(&)
  #   @assert(@typeof(x) == "Int32")
  #
  #   # var y = Box{42}.tap -> &.val = 43 # Panic!
  #   var y = Box{42}.tap -> (var box) box.val = 43
  #   @assert(@typeof(y) == "Box(Int32)")
  # end
  # ```
  const def tap(self ->)
    yield self
    return self
  end
end
